// Code generated by protoc-gen-go. DO NOT EDIT.
// source: changebreaker.proto

/*
Package changebreaker is a generated protocol buffer package.

It is generated from these files:
	changebreaker.proto

It has these top-level messages:
	ChangeReq
	ChangeResp
*/
package changebreaker

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ChangeReq struct {
	Paid  float32 `protobuf:"fixed32,1,opt,name=paid" json:"paid,omitempty"`
	Total float32 `protobuf:"fixed32,2,opt,name=total" json:"total,omitempty"`
}

func (m *ChangeReq) Reset()                    { *m = ChangeReq{} }
func (m *ChangeReq) String() string            { return proto.CompactTextString(m) }
func (*ChangeReq) ProtoMessage()               {}
func (*ChangeReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ChangeReq) GetPaid() float32 {
	if m != nil {
		return m.Paid
	}
	return 0
}

func (m *ChangeReq) GetTotal() float32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type ChangeResp struct {
	Change float32 `protobuf:"fixed32,1,opt,name=change" json:"change,omitempty"`
}

func (m *ChangeResp) Reset()                    { *m = ChangeResp{} }
func (m *ChangeResp) String() string            { return proto.CompactTextString(m) }
func (*ChangeResp) ProtoMessage()               {}
func (*ChangeResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ChangeResp) GetChange() float32 {
	if m != nil {
		return m.Change
	}
	return 0
}

func init() {
	proto.RegisterType((*ChangeReq)(nil), "changebreaker.ChangeReq")
	proto.RegisterType((*ChangeResp)(nil), "changebreaker.ChangeResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Changebreaker service

type ChangebreakerClient interface {
	Change(ctx context.Context, in *ChangeReq, opts ...grpc.CallOption) (*ChangeResp, error)
}

type changebreakerClient struct {
	cc *grpc.ClientConn
}

func NewChangebreakerClient(cc *grpc.ClientConn) ChangebreakerClient {
	return &changebreakerClient{cc}
}

func (c *changebreakerClient) Change(ctx context.Context, in *ChangeReq, opts ...grpc.CallOption) (*ChangeResp, error) {
	out := new(ChangeResp)
	err := grpc.Invoke(ctx, "/changebreaker.Changebreaker/Change", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Changebreaker service

type ChangebreakerServer interface {
	Change(context.Context, *ChangeReq) (*ChangeResp, error)
}

func RegisterChangebreakerServer(s *grpc.Server, srv ChangebreakerServer) {
	s.RegisterService(&_Changebreaker_serviceDesc, srv)
}

func _Changebreaker_Change_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChangebreakerServer).Change(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/changebreaker.Changebreaker/Change",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChangebreakerServer).Change(ctx, req.(*ChangeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Changebreaker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "changebreaker.Changebreaker",
	HandlerType: (*ChangebreakerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Change",
			Handler:    _Changebreaker_Change_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "changebreaker.proto",
}

func init() { proto.RegisterFile("changebreaker.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 142 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0xce, 0x48, 0xcc,
	0x4b, 0x4f, 0x4d, 0x2a, 0x4a, 0x4d, 0xcc, 0x4e, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0xe2, 0x45, 0x11, 0x54, 0x32, 0xe5, 0xe2, 0x74, 0x06, 0x0b, 0x04, 0xa5, 0x16, 0x0a, 0x09, 0x71,
	0xb1, 0x14, 0x24, 0x66, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x05, 0x81, 0xd9, 0x42, 0x22,
	0x5c, 0xac, 0x25, 0xf9, 0x25, 0x89, 0x39, 0x12, 0x4c, 0x60, 0x41, 0x08, 0x47, 0x49, 0x85, 0x8b,
	0x0b, 0xa6, 0xad, 0xb8, 0x40, 0x48, 0x8c, 0x8b, 0x0d, 0x62, 0x2a, 0x54, 0x27, 0x94, 0x67, 0x14,
	0xc0, 0xc5, 0xeb, 0x8c, 0x6c, 0x9b, 0x90, 0x3d, 0x17, 0x1b, 0x44, 0x40, 0x48, 0x42, 0x0f, 0xd5,
	0x71, 0x70, 0x47, 0x48, 0x49, 0xe2, 0x90, 0x29, 0x2e, 0x50, 0x62, 0x48, 0x62, 0x03, 0x7b, 0xc2,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xb0, 0x31, 0x26, 0x6b, 0xdb, 0x00, 0x00, 0x00,
}
